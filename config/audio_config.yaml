# Audio Configuration for AutoVoice - GPU-Optimized Real-Time Processing

# General Audio Settings
audio:
  sample_rate: 22050  # Hz, standard for voice synthesis
  num_channels: 1  # Mono for voice processing
  bit_depth: 16
  duration_max: 60.0  # Maximum audio duration in seconds
  silence_threshold: -40  # dB for silence detection
  silence_duration: 0.5  # Seconds

# Real-Time Processing
realtime:
  buffer_size: 1024  # Samples, optimized for low latency
  overlap: 0.25  # 25% overlap for STFT
  latency_ms: 20  # Target latency for real-time
  frame_size_ms: 46.4  # Based on 1024 samples at 22.05kHz
  hop_size_ms: 11.6
  cuda_streaming: true
  gpu_buffer: true
  num_buffers: 8  # For ring buffer management

# FFT and Spectral Parameters
fft:
  n_fft: 1024
  hop_length: 256
  win_length: 1024
  window_type: "hann"
  center: true
  pad_mode: "reflect"
  normalized: false
  onesided: true
  boundary: "zeros"
  cuda_fft: true  # Use cuFFT library for GPU acceleration
  batch_size: 32  # Parallel FFT batches

# Mel-Spectrogram Settings
mel:
  n_mels: 80
  fmin: 0.0
  fmax: 8000.0  # Hz, focused on voice frequency range
  htk: false  # Use librosa mel scale
  norm: "slaney"
  cuda_optimized: true
  precompute: false  # For real-time

# Pitch Detection Parameters
pitch:
  algorithm: "pyin"  # Probabilistic YIN for accuracy
  frame_length: 2048
  hop_length: 512
  fmin: 75.0  # Lowest expected pitch in Hz
  fmax: 600.0  # Highest expected pitch in Hz
  threshold: 0.1
  gpu_acceleration: true
  parallel_threads: 4

# Formant Analysis
formant:
  num_formants: 5
  f1_range: [300, 1000]  # Hz for first formant
  f2_range: [800, 2500]
  f3_range: [2000, 4000]
  bandwidth_threshold: 100  # Hz
  gpu_parallel: true

# Vocoder and Synthesis Parameters
vocoder:
  sample_rate: 22050
  sigma: 0.9  # Noise scale for HiFi-GAN
  upsample_factor: 256
  gpu_convolutions: true

# Noise Reduction and Enhancement
noise_reduction:
  threshold: -30  # dB
  reduction_strength: 0.8
  rtx_voice: true  # Use RTX Voice if available
  cuda_kernels: true

# Recording Settings
recording:
  device: "default"  # Use default audio input
  channels: 1
  rate: 22050
  chunk_size: 1024
  format: "S16_LE"
  gpu_transfer: true
  noise_gate: true

# Playback Settings
playback:
  device: "default"
  channels: 2  # Stereo for output
  rate: 22050
  buffer_size: 512
  latency: "low"

# GPU Optimization for Audio
gpu_audio:
  memory_pool_size: 2  # GB for audio buffers
  async_io: true
  pinned_host_memory: true
  stream_count: 2

# Vocal Separation Settings
vocal_separation:
  # Model selection: 'htdemucs', 'htdemucs_ft', 'mdx_extra'
  model: 'htdemucs'  # Hybrid Transformer Demucs (best quality)

  # Processing parameters
  sample_rate: 44100  # Native Demucs sample rate (resamples if input differs)
  shifts: 1  # Number of random shifts for better quality (0-10)
  overlap: 0.25  # Overlap between chunks (0.0-0.5)
  split: true  # Split audio into chunks to save memory

  # Backend preferences
  backend_priority: ['demucs', 'spleeter']  # Try in order
  fallback_enabled: true  # Auto-fallback if primary fails
  defer_model_load: true  # Lazy load models on first use (default: true, prevents heavy downloads at init)

  # Caching configuration
  cache_enabled: true
  cache_dir: '~/.cache/autovoice/separated/'
  cache_size_limit_gb: 10  # Maximum cache size
  cache_ttl_days: 30  # Time-to-live for cached files
  lru_access_tracking: true  # Enable LRU access tracking via timestamp files

  # GPU optimization
  gpu_acceleration: true
  mixed_precision: true  # Use FP16 for faster inference on CUDA devices

  # Output settings (always returns numpy arrays)
  normalize_output: true  # Normalize separated stems to prevent clipping
  preserve_sample_rate: true  # Resample output to match input sample rate
  show_progress: false  # Show separation progress (for debugging)

  # Quality presets: 'fast', 'balanced', 'quality'
  quality_preset: 'balanced'  # Default quality preset

  # Batch processing
  batch_max_workers: 4  # Maximum parallel workers for batch processing

# Singing Pitch Extraction (CREPE/torchcrepe)
singing_pitch:
  # Model selection: 'tiny' (faster) or 'full' (more accurate)
  model: 'full'  # Use full model for best accuracy

  # Pitch range for singing voice (Hz)
  fmin: 80.0   # Lowest singing pitch (E2)
  fmax: 1000.0 # Highest singing pitch (C6, covers soprano)

  # Time resolution
  hop_length_ms: 10.0  # 10ms hop for high time resolution

  # COMMENT 5 FIX: Shared win_length for CUDA/torchcrepe alignment
  win_length: 1024  # Window length in samples (matches torchcrepe default and batch trimming)

  # Processing parameters
  batch_size: 2048  # GPU batch size for torchcrepe
  decoder: 'viterbi'  # 'viterbi', 'argmax', or 'weighted_argmax'

  # Post-processing
  confidence_threshold: 0.21  # Periodicity threshold for voiced/unvoiced (torchcrepe)
  # COMMENT 3 FIX: Add dedicated cuda_cmnd_threshold for CUDA kernel pitch detection
  cuda_cmnd_threshold: 0.15   # CMND threshold for CUDA kernel pitch acceptance (lower = more permissive)
  median_filter_width: 3      # Frames for median filtering
  mean_filter_width: 3        # Frames for mean smoothing

  # Vibrato detection and classification
  vibrato_rate_range: [4.0, 8.0]  # Hz, typical singing vibrato
  vibrato_min_depth_cents: 20.0   # Minimum depth to consider vibrato
  vibrato_min_duration_ms: 250.0  # Minimum segment duration
  vibrato_regularity_threshold: 0.5  # Autocorrelation threshold for regularity (0.0-1.0)

  # Pitch correction parameters
  pitch_correction_tolerance_cents: 50.0  # Tolerance for pitch correction suggestions
  pitch_correction_reference_scale: 'C'   # Default reference scale (C, D, E, F, G, A, B)

  # Real-time streaming parameters
  realtime_overlap_frames: 5       # Number of frames to overlap between chunks
  realtime_buffer_size: 4096       # Size of overlap buffer in samples
  realtime_smoothing_window: 5     # Temporal smoothing window size (frames)

  # GPU optimization
  gpu_acceleration: true
  mixed_precision: true  # Use FP16 for faster inference
  use_cuda_kernel_fallback: true  # Use CUDA kernel for real-time
  # COMMENT 5 FIX: Add use_gpu_vibrato_analysis flag
  use_gpu_vibrato_analysis: false  # Use GPU vibrato analysis kernel (experimental, falls back to CPU)

# Singing Voice Analysis
singing_analysis:
  # Time resolution
  hop_length_ms: 10.0
  frame_length_ms: 25.0

  # Breathiness detection
  breathiness_method: 'cpp'  # 'cpp', 'hnr', or 'combined'
  use_parselmouth: true      # Use praat-parselmouth for CPP/HNR
  cpp_fmin: 60.0             # Hz, minimum F0 for CPP
  cpp_fmax: 300.0            # Hz, maximum F0 for CPP
  hnr_min_pitch: 75.0        # Hz, minimum pitch for HNR

  # Breathiness score weights (for 'combined' method)
  breathiness_weights:
    cpp: 0.5      # Cepstral Peak Prominence (primary)
    hnr: 0.3      # Harmonic-to-Noise Ratio
    spectral: 0.2 # Spectral tilt (H1-H2)

  # Dynamics analysis
  dynamics_smoothing_ms: 50.0  # RMS smoothing window
  dynamic_range_threshold_db: 3.0  # Minimum change for crescendo/diminuendo
  accent_threshold_db: 6.0     # Minimum peak for accent detection

  # Vocal quality
  compute_jitter: true   # Pitch perturbation
  compute_shimmer: true  # Amplitude perturbation
  compute_spectral: true # Spectral features

  # Technique detection thresholds
  technique_thresholds:
    breathy_score: 0.6      # Breathiness score threshold
    belting_energy_db: -10.0 # Minimum energy for belting
    falsetto_f0_hz: 400.0   # Minimum F0 for falsetto
    vocal_fry_f0_hz: 80.0   # Maximum F0 for vocal fry

  # GPU optimization
  gpu_acceleration: true

# Voice Cloning Settings
voice_cloning:
  # Audio duration constraints
  min_duration: 30.0  # Minimum audio length in seconds (30-60s recommended for best quality)
  max_duration: 60.0  # Maximum audio length in seconds

  # Speaker embedding
  embedding_dim: 256  # Resemblyzer embedding dimension

  # Storage configuration
  storage_dir: '~/.cache/autovoice/voice_profiles/'  # Profile storage location
  cache_enabled: true  # Enable in-memory caching
  cache_size: 100      # Maximum cached profiles

  # Feature extraction
  extract_vocal_range: true   # Extract F0 range using SingingPitchExtractor
  extract_timbre_features: true  # Extract spectral features

  # Validation thresholds
  min_sample_rate: 8000   # Minimum acceptable sample rate (Hz)
  max_sample_rate: 48000  # Maximum acceptable sample rate (Hz)
  silence_threshold: 0.001  # Minimum RMS for non-silent audio (lowered to accept quieter samples)
  min_snr_db: 10.0  # Minimum Signal-to-Noise Ratio in dB (disable by setting to null)

  # Speaker similarity
  similarity_threshold: 0.75  # Cosine similarity threshold for same speaker

  # Multi-sample support
  multi_sample_quality_weighting: true  # Weight embeddings by SNR when averaging
  multi_sample_min_samples: 1  # Minimum number of samples required
  multi_sample_max_samples: 10  # Maximum number of samples per profile

  # Profile versioning
  versioning_enabled: true  # Enable profile version tracking
  version_history_max_entries: 50  # Maximum version history entries
  schema_version: '1.0.0'  # Profile schema version

  # GPU optimization
  gpu_acceleration: true
  device: 'cuda'  # 'cuda' or 'cpu'

# Audio Mixing Settings
audio_mixing:
  # Normalization method: 'rms', 'peak', or 'lufs'
  normalization_method: 'rms'  # RMS normalization for consistent loudness

  # Target levels (dB)
  target_vocal_level_db: -20.0  # Vocals relative level
  target_instrumental_level_db: -23.0  # Instrumental (LUFS standard)

  # Length alignment
  auto_align_length: true  # Automatically align audio lengths
  alignment_method: 'trim'  # 'trim' (cut longer) or 'pad' (pad shorter)

  # Crossfade settings
  fade_in_ms: 10.0   # Fade-in duration at start
  fade_out_ms: 10.0  # Fade-out duration at end
  fade_curve: 'linear'  # 'linear' or 'cosine'

  # Output settings
  output_format: 'stereo'  # 'stereo' or 'mono'
  prevent_clipping: true  # Apply limiter to prevent clipping
  headroom_db: -1.0  # Headroom for peak limiting

# Singing Voice Conversion Pipeline
singing_conversion_pipeline:
  # Caching configuration
  cache_enabled: true
  cache_dir: '~/.cache/autovoice/converted/'
  cache_size_limit_gb: 5.0  # Maximum cache size
  cache_ttl_days: 7  # Time-to-live for cached conversions

  # Progress tracking
  enable_progress_tracking: true

  # Intermediate results (for debugging)
  save_intermediate_results: false  # Save separated vocals, F0 data, etc.
  intermediate_dir: '~/.cache/autovoice/intermediate/'

  # Volume defaults
  vocal_volume: 1.0  # Default vocal volume multiplier
  instrumental_volume: 0.9  # Default instrumental volume

  # Output settings
  output_sample_rate: 44100  # Output sample rate (Hz)
  output_format: 'wav'  # Output format for saved files

  # GPU optimization
  gpu_acceleration: true
  device: 'cuda'  # 'cuda' or 'cpu'
  enable_memory_cleanup: false  # Clean GPU memory between pipeline stages

  # Error handling
  fallback_on_mixing_error: true  # Return dry vocals if mixing fails
  max_retries: 1  # Retry failed stages

# Enhancement Sections

# Vocal Separator Enhancements
vocal_separator_enhancements:
  # Quality presets for quick configuration
  quality_preset: 'balanced'  # 'fast', 'balanced', 'high_quality'
  # fast: shifts=0, overlap=0.1
  # balanced: shifts=1, overlap=0.25 (default)
  # high_quality: shifts=2, overlap=0.5

  # Parallel processing
  batch_max_workers: 4  # Maximum parallel workers for batch separation

  # Cache management
  lru_access_tracking: true  # Track access times for better LRU eviction
  cache_compression: false  # Compress cached files (trades CPU for disk space)

# Pitch Extractor Enhancements
pitch_extractor_enhancements:
  # Vibrato detection parameters
  vibrato_detection:
    enabled: true
    rate_range: [4.0, 8.0]  # Hz, typical singing vibrato rate
    min_depth_cents: 20.0   # Minimum depth to detect vibrato
    min_duration_ms: 250.0  # Minimum segment duration

  # Pitch correction and smoothing
  pitch_correction:
    enabled: false  # Enable pitch correction/quantization
    snap_to_scale: false  # Snap pitches to musical scale
    scale_type: 'chromatic'  # 'chromatic', 'major', 'minor'
    correction_strength: 0.5  # 0.0-1.0, blend factor

  # Real-time parameters
  realtime:
    low_latency_mode: false  # Optimize for latency over accuracy
    max_latency_ms: 50.0  # Maximum acceptable latency
    use_lightweight_model: false  # Use 'tiny' model for speed

# Voice Cloner Enhancements
voice_cloner_enhancements:
  # Audio quality validation
  min_snr_db: 10.0  # Minimum signal-to-noise ratio (dB)
  require_clean_audio: false  # Reject noisy samples

  # Multi-sample averaging
  multi_sample:
    enabled: false  # Average embeddings from multiple samples
    min_samples: 3  # Minimum samples for averaging
    max_samples: 10  # Maximum samples to average
    similarity_threshold: 0.85  # Minimum similarity to include in average

  # Profile versioning
  versioning:
    enabled: true  # Enable profile version tracking
    auto_backup: true  # Backup old versions on update
    max_versions: 5  # Maximum versions to keep

# Voice Converter Enhancements
voice_converter_enhancements:
  # Temperature controls for sampling
  temperature:
    default: 1.0  # Default sampling temperature
    min: 0.1  # Minimum temperature (more deterministic)
    max: 2.0  # Maximum temperature (more random)

  # Pitch shifting
  pitch_shift:
    enabled: false  # Enable automatic pitch shifting
    semitones: 0  # Pitch shift amount in semitones (-12 to +12)
    preserve_formants: true  # Preserve formant structure

  # Quality vs speed presets
  quality_preset: 'balanced'  # 'fast', 'balanced', 'high_quality'
  # fast: Lower inference steps, FP16
  # balanced: Standard settings (default)
  # high_quality: More inference steps, FP32

  # Post-processing
  post_processing:
    apply_denoising: false  # Apply noise reduction to output
    apply_normalization: true  # Normalize output levels
    apply_compression: false  # Apply dynamic range compression

# CUDA Kernel Tuning Parameters
cuda_kernels:
  # Pitch Detection Kernel Tuning
  pitch_detection:
    block_size: 256          # Threads per block for pitch detection
    frame_length: 2048       # Analysis window size (samples)
    hop_length: 512          # Hop size between frames (samples)
    fmin: 80.0               # Minimum frequency (Hz) for singing
    fmax: 1000.0             # Maximum frequency (Hz) for singing
    threshold: 0.15          # CMND threshold for pitch acceptance
    shared_mem_size: 2572    # Shared memory size (floats): frame_length + prefix(534) + history(20)
    enable_harmonic_weighting: true  # Use harmonic weighting to reduce octave errors
    enable_early_exit: true  # Enable prefix-based early exit pruning

  # Mel-Spectrogram Kernel Tuning (Singing Voice)
  mel_spectrogram_singing:
    block_size: 256          # Threads per block
    n_fft: 2048              # FFT size for singing voice
    hop_length: 512          # Hop size (samples)
    mel_bins: 128            # Number of mel bins
    sample_rate: 44100       # Singing voice sample rate (Hz)
    fmin: 80.0               # Minimum mel frequency (Hz)
    fmax: 8000.0             # Maximum mel frequency (Hz)
    apply_a_weighting: false # Apply perceptual A-weighting
    shared_mem_size: 1152    # Shared memory: n_fft/2 + mel_bins floats
    use_cufft_plan_cache: true  # Enable cuFFT plan caching

  # Formant Extraction Kernel Tuning
  formant_extraction:
    block_size: 128          # Threads per block
    frame_length: 2048       # LPC analysis window (samples)
    lpc_order: 14            # LPC order (10-14 for speech, 14-16 for singing)
    num_formants: 4          # Number of formants to extract (3-5)
    sample_rate: 44100       # Sample rate (Hz)
    root_finding_iterations: 100  # Durand-Kerner iterations
    shared_mem_size: 2063    # frame_length + lpc_order + 1
    enable_validation: true  # Validate formant ranges (F1: 200-1000 Hz, etc.)

  # Optimized STFT Kernel Tuning
  optimized_stft:
    block_size: 256          # Threads per block
    n_fft: 2048              # FFT size
    hop_length: 512          # Hop size (samples)
    batch_size: 32           # Batch size for parallel processing
    shared_mem_size: 2048    # Shared memory for windowed frames
    use_cufft_plan_cache: true  # Enable cuFFT plan caching
    window_type: 'hann'      # Window function type

  # Optimized ISTFT Kernel Tuning
  optimized_istft:
    block_size: 256          # Threads per block for overlap-add
    n_fft: 2048              # FFT size
    hop_length: 512          # Hop size (samples)
    batch_size: 32           # Batch size
    shared_mem_size: 2560    # Shared memory: n_fft + 512 for window_sum
    use_cufft_plan_cache: true  # Enable cuFFT plan caching
    precompute_window_sum: true  # Precompute window sum for O(1) normalization
    window_type: 'hann'      # Window function type
    perfect_reconstruction: true  # Enable perfect reconstruction normalization

  # Real-Time Voice Conversion Kernel Tuning
  realtime_voice_conversion:
    block_size: 256          # Threads per block
    chunk_size: 4410         # Chunk size (100ms at 44.1kHz)
    overlap_size: 1102       # Overlap size (25%)
    n_fft: 2048              # FFT size
    hop_length: 512          # Hop size (samples)
    shared_mem_size: 5512    # Shared memory: chunk_size + overlap_size
    feature_dim: 128         # Output feature dimension

  # Vibrato Analysis Kernel Tuning
  vibrato_analysis:
    block_size: 256          # Threads per block
    window_size: 20          # Analysis window (frames, ~200ms)
    hop_length: 512          # Hop size (samples)
    sample_rate: 44100       # Sample rate (Hz)
    min_rate_hz: 4.0         # Minimum vibrato rate (Hz)
    max_rate_hz: 8.0         # Maximum vibrato rate (Hz)
    min_depth_cents: 20.0    # Minimum vibrato depth (cents)
    autocorr_threshold: 0.5  # Autocorrelation threshold
    shared_mem_size: 20      # Window data in shared memory

  # General Kernel Settings
  general:
    enable_plan_caching: true     # Enable cuFFT plan caching globally
    max_cached_plans: 8           # Maximum number of cached cuFFT plans
    use_streams: true             # Use CUDA streams for async execution
    default_stream: 0             # Default CUDA stream (0 = default stream)
    enable_nvtx_markers: false    # Enable NVTX markers for profiling
    enable_error_checking: true   # Enable comprehensive CUDA error checking

  # Performance Profiling
  profiling:
    enable_profiling: false       # Enable kernel profiling
    profile_output_dir: '~/.cache/autovoice/profiles/'
    use_nsight_compute: false     # Use Nsight Compute for detailed metrics
    use_nsight_systems: false     # Use Nsight Systems for timeline analysis
    collect_metrics: ['sm_efficiency', 'memory_throughput', 'occupancy']