[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Default options
addopts =
    -v
    --strict-markers
    --tb=short
    --color=yes
    --durations=10
    -ra
    --cov=src/auto_voice
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80

# Custom markers
markers =
    smoke: Smoke tests (basic functionality validation)
    unit: Unit tests (fast, isolated)
    integration: Integration tests (component interactions)
    e2e: End-to-end tests (complete workflows)
    slow: Slow tests (>1 second)
    very_slow: Very slow tests (>5 minutes)
    cuda: Tests requiring CUDA
    performance: Performance benchmarks and latency validation
    tensorrt: Tests requiring TensorRT
    requires_trt: Tests requiring TensorRT (strict requirement)
    web: Web interface tests
    websocket: WebSocket functionality tests
    model: Model tests
    audio: Audio processing tests
    training: Training pipeline tests
    inference: Inference engine tests
    api: API contract validation tests (Comment 12)
    system_validation: Comprehensive system validation tests (Comments 1, 2, 3, 9)
    edge_cases: Edge case tests (short/long audio, a cappella, processed vocals)
    genre_specific: Genre-specific validation tests (pop, rock, jazz, classical, rap)
    quality: Quality gate tests enforcing targets (pitch, speaker similarity, latency)

# Coverage configuration
[coverage:run]
source = src/auto_voice
omit =
    tests/*
    */__init__.py
    */setup.py
    */example_*.py
    */web/static/*
    */web/templates/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
sort = Cover
fail_under = 80

[coverage:html]
directory = htmlcov
title = AutoVoice Test Coverage

# Warning configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:torch.*
    ignore::FutureWarning:tensorflow.*

# Timeout configuration
timeout = 300
timeout_method = thread

# Minimum Python version
minversion = 3.8

# Test output configuration
console_output_style = progress
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
